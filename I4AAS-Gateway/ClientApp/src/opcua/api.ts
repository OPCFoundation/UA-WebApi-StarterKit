/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface AggregateConfiguration
 */
export interface AggregateConfiguration {
    /**
     * 
     * @type {boolean}
     * @memberof AggregateConfiguration
     */
    'UseServerCapabilitiesDefaults'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AggregateConfiguration
     */
    'TreatUncertainAsBad'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AggregateConfiguration
     */
    'PercentDataBad'?: number;
    /**
     * 
     * @type {number}
     * @memberof AggregateConfiguration
     */
    'PercentDataGood'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AggregateConfiguration
     */
    'UseSlopedExtrapolation'?: boolean;
}
/**
 * 
 * @export
 * @interface BrowseDescription
 */
export interface BrowseDescription {
    /**
     * 
     * @type {string}
     * @memberof BrowseDescription
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof BrowseDescription
     */
    'BrowseDirection'?: number;
    /**
     * 
     * @type {string}
     * @memberof BrowseDescription
     */
    'ReferenceTypeId'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BrowseDescription
     */
    'IncludeSubtypes'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BrowseDescription
     */
    'NodeClassMask'?: number;
    /**
     * 
     * @type {number}
     * @memberof BrowseDescription
     */
    'ResultMask'?: number;
}
/**
 * 
 * @export
 * @interface BrowseNextRequest
 */
export interface BrowseNextRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof BrowseNextRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {boolean}
     * @memberof BrowseNextRequest
     */
    'ReleaseContinuationPoints'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextRequest
     */
    'ContinuationPoints'?: Array<string>;
}
/**
 * 
 * @export
 * @interface BrowseNextRequestMessage
 */
export interface BrowseNextRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof BrowseNextRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {BrowseNextRequest}
     * @memberof BrowseNextRequestMessage
     */
    'Body'?: BrowseNextRequest;
}
/**
 * 
 * @export
 * @interface BrowseNextResponse
 */
export interface BrowseNextResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof BrowseNextResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<BrowseResult>}
     * @memberof BrowseNextResponse
     */
    'Results'?: Array<BrowseResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof BrowseNextResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface BrowseNextResponseMessage
 */
export interface BrowseNextResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseNextResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof BrowseNextResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {BrowseNextResponse}
     * @memberof BrowseNextResponseMessage
     */
    'Body'?: BrowseNextResponse;
}
/**
 * 
 * @export
 * @interface BrowsePath
 */
export interface BrowsePath {
    /**
     * 
     * @type {string}
     * @memberof BrowsePath
     */
    'StartingNode'?: string;
    /**
     * 
     * @type {RelativePath}
     * @memberof BrowsePath
     */
    'RelativePath'?: RelativePath;
}
/**
 * 
 * @export
 * @interface BrowsePathResult
 */
export interface BrowsePathResult {
    /**
     * 
     * @type {number}
     * @memberof BrowsePathResult
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {Array<BrowsePathTarget>}
     * @memberof BrowsePathResult
     */
    'Targets'?: Array<BrowsePathTarget>;
}
/**
 * 
 * @export
 * @interface BrowsePathTarget
 */
export interface BrowsePathTarget {
    /**
     * 
     * @type {string}
     * @memberof BrowsePathTarget
     */
    'TargetId'?: string;
    /**
     * 
     * @type {number}
     * @memberof BrowsePathTarget
     */
    'RemainingPathIndex'?: number;
}
/**
 * 
 * @export
 * @interface BrowseRequest
 */
export interface BrowseRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof BrowseRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {ViewDescription}
     * @memberof BrowseRequest
     */
    'View'?: ViewDescription;
    /**
     * 
     * @type {number}
     * @memberof BrowseRequest
     */
    'RequestedMaxReferencesPerNode'?: number;
    /**
     * 
     * @type {Array<BrowseDescription>}
     * @memberof BrowseRequest
     */
    'NodesToBrowse'?: Array<BrowseDescription>;
}
/**
 * 
 * @export
 * @interface BrowseRequestMessage
 */
export interface BrowseRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof BrowseRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {BrowseRequest}
     * @memberof BrowseRequestMessage
     */
    'Body'?: BrowseRequest;
}
/**
 * 
 * @export
 * @interface BrowseResponse
 */
export interface BrowseResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof BrowseResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<BrowseResult>}
     * @memberof BrowseResponse
     */
    'Results'?: Array<BrowseResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof BrowseResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface BrowseResponseMessage
 */
export interface BrowseResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BrowseResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof BrowseResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {BrowseResponse}
     * @memberof BrowseResponseMessage
     */
    'Body'?: BrowseResponse;
}
/**
 * 
 * @export
 * @interface BrowseResult
 */
export interface BrowseResult {
    /**
     * 
     * @type {number}
     * @memberof BrowseResult
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {string}
     * @memberof BrowseResult
     */
    'ContinuationPoint'?: string;
    /**
     * 
     * @type {Array<ReferenceDescription>}
     * @memberof BrowseResult
     */
    'References'?: Array<ReferenceDescription>;
}
/**
 * 
 * @export
 * @interface CallMethodRequest
 */
export interface CallMethodRequest {
    /**
     * 
     * @type {string}
     * @memberof CallMethodRequest
     */
    'ObjectId'?: string;
    /**
     * 
     * @type {string}
     * @memberof CallMethodRequest
     */
    'MethodId'?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof CallMethodRequest
     */
    'InputArguments'?: Array<object>;
}
/**
 * 
 * @export
 * @interface CallMethodResult
 */
export interface CallMethodResult {
    /**
     * 
     * @type {number}
     * @memberof CallMethodResult
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof CallMethodResult
     */
    'InputArgumentResults'?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof CallMethodResult
     */
    'InputArgumentDiagnosticInfos'?: Array<DiagnosticInfo>;
    /**
     * 
     * @type {Array<object>}
     * @memberof CallMethodResult
     */
    'OutputArguments'?: Array<object>;
}
/**
 * 
 * @export
 * @interface CallRequest
 */
export interface CallRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof CallRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {Array<CallMethodRequest>}
     * @memberof CallRequest
     */
    'MethodsToCall'?: Array<CallMethodRequest>;
}
/**
 * 
 * @export
 * @interface CallRequestMessage
 */
export interface CallRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof CallRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CallRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CallRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CallRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {CallRequest}
     * @memberof CallRequestMessage
     */
    'Body'?: CallRequest;
}
/**
 * 
 * @export
 * @interface CallResponse
 */
export interface CallResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof CallResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<CallMethodResult>}
     * @memberof CallResponse
     */
    'Results'?: Array<CallMethodResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof CallResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface CallResponseMessage
 */
export interface CallResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof CallResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CallResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CallResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {CallResponse}
     * @memberof CallResponseMessage
     */
    'Body'?: CallResponse;
}
/**
 * 
 * @export
 * @interface ContentFilter
 */
export interface ContentFilter {
    /**
     * 
     * @type {Array<ContentFilterElement>}
     * @memberof ContentFilter
     */
    'Elements'?: Array<ContentFilterElement>;
}
/**
 * 
 * @export
 * @interface ContentFilterElement
 */
export interface ContentFilterElement {
    /**
     * 
     * @type {number}
     * @memberof ContentFilterElement
     */
    'FilterOperator'?: number;
    /**
     * 
     * @type {Array<ExtensionObject>}
     * @memberof ContentFilterElement
     */
    'FilterOperands'?: Array<ExtensionObject>;
}
/**
 * 
 * @export
 * @interface DataValue
 */
export interface DataValue {
    /**
     * 
     * @type {Variant}
     * @memberof DataValue
     */
    'Value'?: Variant;
    /**
     * 
     * @type {number}
     * @memberof DataValue
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {string}
     * @memberof DataValue
     */
    'SourceTimestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof DataValue
     */
    'SourcePicoSeconds'?: number;
    /**
     * 
     * @type {string}
     * @memberof DataValue
     */
    'ServerTimestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof DataValue
     */
    'ServerPicoSeconds'?: number;
}
/**
 * 
 * @export
 * @interface Decimal
 */
export interface Decimal {
    /**
     * 
     * @type {number}
     * @memberof Decimal
     */
    'Scale'?: number;
    /**
     * 
     * @type {string}
     * @memberof Decimal
     */
    'Value'?: string;
}
/**
 * 
 * @export
 * @interface DiagnosticInfo
 */
export interface DiagnosticInfo {
    /**
     * 
     * @type {number}
     * @memberof DiagnosticInfo
     */
    'SymbolicId'?: number;
    /**
     * 
     * @type {number}
     * @memberof DiagnosticInfo
     */
    'NamespaceUri'?: number;
    /**
     * 
     * @type {number}
     * @memberof DiagnosticInfo
     */
    'Locale'?: number;
    /**
     * 
     * @type {number}
     * @memberof DiagnosticInfo
     */
    'LocalizedText'?: number;
    /**
     * 
     * @type {string}
     * @memberof DiagnosticInfo
     */
    'AdditionalInfo'?: string;
    /**
     * 
     * @type {number}
     * @memberof DiagnosticInfo
     */
    'InnerStatusCode'?: number;
    /**
     * 
     * @type {DiagnosticInfo}
     * @memberof DiagnosticInfo
     */
    'InnerDiagnosticInfo'?: DiagnosticInfo;
}
/**
 * 
 * @export
 * @interface EventFilter
 */
export interface EventFilter {
    /**
     * 
     * @type {Array<SimpleAttributeOperand>}
     * @memberof EventFilter
     */
    'SelectClauses'?: Array<SimpleAttributeOperand>;
    /**
     * 
     * @type {ContentFilter}
     * @memberof EventFilter
     */
    'WhereClause'?: ContentFilter;
}
/**
 * 
 * @export
 * @interface ExtensionObject
 */
export interface ExtensionObject {
    /**
     * 
     * @type {string}
     * @memberof ExtensionObject
     */
    'TypeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof ExtensionObject
     */
    'Encoding'?: number;
    /**
     * 
     * @type {object}
     * @memberof ExtensionObject
     */
    'Body'?: object;
}
/**
 * 
 * @export
 * @interface HistoryData
 */
export interface HistoryData {
    /**
     * 
     * @type {Array<DataValue>}
     * @memberof HistoryData
     */
    'DataValues'?: Array<DataValue>;
}
/**
 * 
 * @export
 * @interface HistoryEvent
 */
export interface HistoryEvent {
    /**
     * 
     * @type {Array<HistoryEventFieldList>}
     * @memberof HistoryEvent
     */
    'Events'?: Array<HistoryEventFieldList>;
}
/**
 * 
 * @export
 * @interface HistoryEventFieldList
 */
export interface HistoryEventFieldList {
    /**
     * 
     * @type {Array<object>}
     * @memberof HistoryEventFieldList
     */
    'EventFields'?: Array<object>;
}
/**
 * 
 * @export
 * @interface HistoryModifiedData
 */
export interface HistoryModifiedData {
    /**
     * 
     * @type {Array<ModificationInfo>}
     * @memberof HistoryModifiedData
     */
    'ModificationInfos'?: Array<ModificationInfo>;
    /**
     * 
     * @type {Array<DataValue>}
     * @memberof HistoryModifiedData
     */
    'DataValues'?: Array<DataValue>;
}
/**
 * 
 * @export
 * @interface HistoryReadRequest
 */
export interface HistoryReadRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof HistoryReadRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof HistoryReadRequest
     */
    'HistoryReadDetails'?: ExtensionObject;
    /**
     * 
     * @type {number}
     * @memberof HistoryReadRequest
     */
    'TimestampsToReturn'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof HistoryReadRequest
     */
    'ReleaseContinuationPoints'?: boolean;
    /**
     * 
     * @type {Array<HistoryReadValueId>}
     * @memberof HistoryReadRequest
     */
    'NodesToRead'?: Array<HistoryReadValueId>;
}
/**
 * 
 * @export
 * @interface HistoryReadRequestMessage
 */
export interface HistoryReadRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryReadRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryReadRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryReadRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HistoryReadRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {HistoryReadRequest}
     * @memberof HistoryReadRequestMessage
     */
    'Body'?: HistoryReadRequest;
}
/**
 * 
 * @export
 * @interface HistoryReadResponse
 */
export interface HistoryReadResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof HistoryReadResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<HistoryReadResult>}
     * @memberof HistoryReadResponse
     */
    'Results'?: Array<HistoryReadResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof HistoryReadResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface HistoryReadResponseMessage
 */
export interface HistoryReadResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryReadResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryReadResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HistoryReadResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {HistoryReadResponse}
     * @memberof HistoryReadResponseMessage
     */
    'Body'?: HistoryReadResponse;
}
/**
 * 
 * @export
 * @interface HistoryReadResult
 */
export interface HistoryReadResult {
    /**
     * 
     * @type {number}
     * @memberof HistoryReadResult
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {string}
     * @memberof HistoryReadResult
     */
    'ContinuationPoint'?: string;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof HistoryReadResult
     */
    'HistoryData'?: ExtensionObject;
}
/**
 * 
 * @export
 * @interface HistoryReadValueId
 */
export interface HistoryReadValueId {
    /**
     * 
     * @type {string}
     * @memberof HistoryReadValueId
     */
    'NodeId'?: string;
    /**
     * 
     * @type {string}
     * @memberof HistoryReadValueId
     */
    'IndexRange'?: string;
    /**
     * 
     * @type {string}
     * @memberof HistoryReadValueId
     */
    'DataEncoding'?: string;
    /**
     * 
     * @type {string}
     * @memberof HistoryReadValueId
     */
    'ContinuationPoint'?: string;
}
/**
 * 
 * @export
 * @interface HistoryUpdateRequest
 */
export interface HistoryUpdateRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof HistoryUpdateRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {Array<ExtensionObject>}
     * @memberof HistoryUpdateRequest
     */
    'HistoryUpdateDetails'?: Array<ExtensionObject>;
}
/**
 * 
 * @export
 * @interface HistoryUpdateRequestMessage
 */
export interface HistoryUpdateRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryUpdateRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryUpdateRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryUpdateRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HistoryUpdateRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {HistoryUpdateRequest}
     * @memberof HistoryUpdateRequestMessage
     */
    'Body'?: HistoryUpdateRequest;
}
/**
 * 
 * @export
 * @interface HistoryUpdateResponse
 */
export interface HistoryUpdateResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof HistoryUpdateResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<HistoryUpdateResult>}
     * @memberof HistoryUpdateResponse
     */
    'Results'?: Array<HistoryUpdateResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof HistoryUpdateResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface HistoryUpdateResponseMessage
 */
export interface HistoryUpdateResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryUpdateResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HistoryUpdateResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HistoryUpdateResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {HistoryUpdateResponse}
     * @memberof HistoryUpdateResponseMessage
     */
    'Body'?: HistoryUpdateResponse;
}
/**
 * 
 * @export
 * @interface HistoryUpdateResult
 */
export interface HistoryUpdateResult {
    /**
     * 
     * @type {number}
     * @memberof HistoryUpdateResult
     */
    'StatusCode'?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof HistoryUpdateResult
     */
    'OperationResults'?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof HistoryUpdateResult
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface LocalizedText
 */
export interface LocalizedText {
    /**
     * 
     * @type {string}
     * @memberof LocalizedText
     */
    'Locale'?: string;
    /**
     * 
     * @type {string}
     * @memberof LocalizedText
     */
    'Text'?: string;
}
/**
 * 
 * @export
 * @interface ModificationInfo
 */
export interface ModificationInfo {
    /**
     * 
     * @type {string}
     * @memberof ModificationInfo
     */
    'ModificationTime'?: string;
    /**
     * 
     * @type {number}
     * @memberof ModificationInfo
     */
    'UpdateType'?: number;
    /**
     * 
     * @type {string}
     * @memberof ModificationInfo
     */
    'UserName'?: string;
}
/**
 * 
 * @export
 * @interface ReadAnnotationDataDetails
 */
export interface ReadAnnotationDataDetails {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadAnnotationDataDetails
     */
    'ReqTimes'?: Array<string>;
}
/**
 * 
 * @export
 * @interface ReadAtTimeDetails
 */
export interface ReadAtTimeDetails {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadAtTimeDetails
     */
    'ReqTimes'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof ReadAtTimeDetails
     */
    'UseSimpleBounds'?: boolean;
}
/**
 * 
 * @export
 * @interface ReadEventDetails
 */
export interface ReadEventDetails {
    /**
     * 
     * @type {number}
     * @memberof ReadEventDetails
     */
    'NumValuesPerNode'?: number;
    /**
     * 
     * @type {string}
     * @memberof ReadEventDetails
     */
    'StartTime'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReadEventDetails
     */
    'EndTime'?: string;
    /**
     * 
     * @type {EventFilter}
     * @memberof ReadEventDetails
     */
    'Filter'?: EventFilter;
}
/**
 * 
 * @export
 * @interface ReadEventDetails2
 */
export interface ReadEventDetails2 {
    /**
     * 
     * @type {boolean}
     * @memberof ReadEventDetails2
     */
    'ReadModified'?: boolean;
}
/**
 * 
 * @export
 * @interface ReadProcessedDetails
 */
export interface ReadProcessedDetails {
    /**
     * 
     * @type {string}
     * @memberof ReadProcessedDetails
     */
    'StartTime'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReadProcessedDetails
     */
    'EndTime'?: string;
    /**
     * 
     * @type {number}
     * @memberof ReadProcessedDetails
     */
    'ProcessingInterval'?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadProcessedDetails
     */
    'AggregateType'?: Array<string>;
    /**
     * 
     * @type {AggregateConfiguration}
     * @memberof ReadProcessedDetails
     */
    'AggregateConfiguration'?: AggregateConfiguration;
}
/**
 * 
 * @export
 * @interface ReadRawModifiedDetails
 */
export interface ReadRawModifiedDetails {
    /**
     * 
     * @type {boolean}
     * @memberof ReadRawModifiedDetails
     */
    'IsReadModified'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReadRawModifiedDetails
     */
    'StartTime'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReadRawModifiedDetails
     */
    'EndTime'?: string;
    /**
     * 
     * @type {number}
     * @memberof ReadRawModifiedDetails
     */
    'NumValuesPerNode'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ReadRawModifiedDetails
     */
    'ReturnBounds'?: boolean;
}
/**
 * 
 * @export
 * @interface ReadRequest
 */
export interface ReadRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof ReadRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {number}
     * @memberof ReadRequest
     */
    'MaxAge'?: number;
    /**
     * 
     * @type {number}
     * @memberof ReadRequest
     */
    'TimestampsToReturn'?: number;
    /**
     * 
     * @type {Array<ReadValueId>}
     * @memberof ReadRequest
     */
    'NodesToRead'?: Array<ReadValueId>;
}
/**
 * 
 * @export
 * @interface ReadRequestMessage
 */
export interface ReadRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ReadRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {ReadRequest}
     * @memberof ReadRequestMessage
     */
    'Body'?: ReadRequest;
}
/**
 * 
 * @export
 * @interface ReadResponse
 */
export interface ReadResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof ReadResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<DataValue>}
     * @memberof ReadResponse
     */
    'Results'?: Array<DataValue>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof ReadResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface ReadResponseMessage
 */
export interface ReadResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ReadResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {ReadResponse}
     * @memberof ReadResponseMessage
     */
    'Body'?: ReadResponse;
}
/**
 * 
 * @export
 * @interface ReadValueId
 */
export interface ReadValueId {
    /**
     * 
     * @type {string}
     * @memberof ReadValueId
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof ReadValueId
     */
    'AttributeId'?: number;
    /**
     * 
     * @type {string}
     * @memberof ReadValueId
     */
    'IndexRange'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReadValueId
     */
    'DataEncoding'?: string;
}
/**
 * 
 * @export
 * @interface ReferenceDescription
 */
export interface ReferenceDescription {
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    'ReferenceTypeId'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReferenceDescription
     */
    'IsForward'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    'NodeId'?: string;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    'BrowseName'?: string;
    /**
     * 
     * @type {LocalizedText}
     * @memberof ReferenceDescription
     */
    'DisplayName'?: LocalizedText;
    /**
     * 
     * @type {number}
     * @memberof ReferenceDescription
     */
    'NodeClass'?: number;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    'TypeDefinition'?: string;
}
/**
 * 
 * @export
 * @interface RelativePath
 */
export interface RelativePath {
    /**
     * 
     * @type {Array<RelativePathElement>}
     * @memberof RelativePath
     */
    'Elements'?: Array<RelativePathElement>;
}
/**
 * 
 * @export
 * @interface RelativePathElement
 */
export interface RelativePathElement {
    /**
     * 
     * @type {string}
     * @memberof RelativePathElement
     */
    'ReferenceTypeId'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RelativePathElement
     */
    'IsInverse'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RelativePathElement
     */
    'IncludeSubtypes'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RelativePathElement
     */
    'TargetName'?: string;
}
/**
 * 
 * @export
 * @interface RequestHeader
 */
export interface RequestHeader {
    /**
     * 
     * @type {string}
     * @memberof RequestHeader
     */
    'AuthenticationToken'?: string;
    /**
     * 
     * @type {string}
     * @memberof RequestHeader
     */
    'Timestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof RequestHeader
     */
    'RequestHandle'?: number;
    /**
     * 
     * @type {number}
     * @memberof RequestHeader
     */
    'ReturnDiagnostics'?: number;
    /**
     * 
     * @type {string}
     * @memberof RequestHeader
     */
    'AuditEntryId'?: string;
    /**
     * 
     * @type {number}
     * @memberof RequestHeader
     */
    'TimeoutHint'?: number;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof RequestHeader
     */
    'AdditionalHeader'?: ExtensionObject;
}
/**
 * 
 * @export
 * @interface ResponseHeader
 */
export interface ResponseHeader {
    /**
     * 
     * @type {string}
     * @memberof ResponseHeader
     */
    'Timestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof ResponseHeader
     */
    'RequestHandle'?: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseHeader
     */
    'ServiceResult'?: number;
    /**
     * 
     * @type {DiagnosticInfo}
     * @memberof ResponseHeader
     */
    'ServiceDiagnostics'?: DiagnosticInfo;
    /**
     * 
     * @type {Array<string>}
     * @memberof ResponseHeader
     */
    'StringTable'?: Array<string>;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof ResponseHeader
     */
    'AdditionalHeader'?: ExtensionObject;
}
/**
 * 
 * @export
 * @interface SimpleAttributeOperand
 */
export interface SimpleAttributeOperand {
    /**
     * 
     * @type {string}
     * @memberof SimpleAttributeOperand
     */
    'TypeDefinitionId'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SimpleAttributeOperand
     */
    'BrowsePath'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof SimpleAttributeOperand
     */
    'AttributeId'?: number;
    /**
     * 
     * @type {string}
     * @memberof SimpleAttributeOperand
     */
    'IndexRange'?: string;
}
/**
 * 
 * @export
 * @interface TranslateBrowsePathsToNodeIdsRequest
 */
export interface TranslateBrowsePathsToNodeIdsRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof TranslateBrowsePathsToNodeIdsRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {Array<BrowsePath>}
     * @memberof TranslateBrowsePathsToNodeIdsRequest
     */
    'BrowsePaths'?: Array<BrowsePath>;
}
/**
 * 
 * @export
 * @interface TranslateBrowsePathsToNodeIdsRequestMessage
 */
export interface TranslateBrowsePathsToNodeIdsRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslateBrowsePathsToNodeIdsRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslateBrowsePathsToNodeIdsRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslateBrowsePathsToNodeIdsRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof TranslateBrowsePathsToNodeIdsRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {TranslateBrowsePathsToNodeIdsRequest}
     * @memberof TranslateBrowsePathsToNodeIdsRequestMessage
     */
    'Body'?: TranslateBrowsePathsToNodeIdsRequest;
}
/**
 * 
 * @export
 * @interface TranslateBrowsePathsToNodeIdsResponse
 */
export interface TranslateBrowsePathsToNodeIdsResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof TranslateBrowsePathsToNodeIdsResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<BrowsePathResult>}
     * @memberof TranslateBrowsePathsToNodeIdsResponse
     */
    'Results'?: Array<BrowsePathResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof TranslateBrowsePathsToNodeIdsResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface TranslateBrowsePathsToNodeIdsResponseMessage
 */
export interface TranslateBrowsePathsToNodeIdsResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslateBrowsePathsToNodeIdsResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslateBrowsePathsToNodeIdsResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof TranslateBrowsePathsToNodeIdsResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {TranslateBrowsePathsToNodeIdsResponse}
     * @memberof TranslateBrowsePathsToNodeIdsResponseMessage
     */
    'Body'?: TranslateBrowsePathsToNodeIdsResponse;
}
/**
 * 
 * @export
 * @interface UpdateDataDetails
 */
export interface UpdateDataDetails {
    /**
     * 
     * @type {string}
     * @memberof UpdateDataDetails
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateDataDetails
     */
    'PerformInsertReplace'?: number;
    /**
     * 
     * @type {Array<DataValue>}
     * @memberof UpdateDataDetails
     */
    'UpdateValues'?: Array<DataValue>;
}
/**
 * 
 * @export
 * @interface UpdateEventDetails
 */
export interface UpdateEventDetails {
    /**
     * 
     * @type {string}
     * @memberof UpdateEventDetails
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateEventDetails
     */
    'PerformInsertReplace'?: number;
    /**
     * 
     * @type {EventFilter}
     * @memberof UpdateEventDetails
     */
    'Filter'?: EventFilter;
    /**
     * 
     * @type {Array<HistoryEventFieldList>}
     * @memberof UpdateEventDetails
     */
    'EventData'?: Array<HistoryEventFieldList>;
}
/**
 * 
 * @export
 * @interface UpdateStructureDataDetails
 */
export interface UpdateStructureDataDetails {
    /**
     * 
     * @type {string}
     * @memberof UpdateStructureDataDetails
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateStructureDataDetails
     */
    'PerformInsertReplace'?: number;
    /**
     * 
     * @type {Array<DataValue>}
     * @memberof UpdateStructureDataDetails
     */
    'UpdateValues'?: Array<DataValue>;
}
/**
 * 
 * @export
 * @interface Variant
 */
export interface Variant {
    /**
     * 
     * @type {number}
     * @memberof Variant
     */
    'Type'?: number;
    /**
     * 
     * @type {any}
     * @memberof Variant
     */
    'Body'?: any;
    /**
     * 
     * @type {Array<number>}
     * @memberof Variant
     */
    'Dimensions'?: Array<number>;
}
/**
 * 
 * @export
 * @interface ViewDescription
 */
export interface ViewDescription {
    /**
     * 
     * @type {string}
     * @memberof ViewDescription
     */
    'ViewId'?: string;
    /**
     * 
     * @type {string}
     * @memberof ViewDescription
     */
    'Timestamp'?: string;
    /**
     * 
     * @type {number}
     * @memberof ViewDescription
     */
    'ViewVersion'?: number;
}
/**
 * 
 * @export
 * @interface WriteRequest
 */
export interface WriteRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof WriteRequest
     */
    'RequestHeader'?: RequestHeader;
    /**
     * 
     * @type {Array<WriteValue>}
     * @memberof WriteRequest
     */
    'NodesToWrite'?: Array<WriteValue>;
}
/**
 * 
 * @export
 * @interface WriteRequestMessage
 */
export interface WriteRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof WriteRequestMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WriteRequestMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WriteRequestMessage
     */
    'LocaleIds'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof WriteRequestMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {WriteRequest}
     * @memberof WriteRequestMessage
     */
    'Body'?: WriteRequest;
}
/**
 * 
 * @export
 * @interface WriteResponse
 */
export interface WriteResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof WriteResponse
     */
    'ResponseHeader'?: ResponseHeader;
    /**
     * 
     * @type {Array<number>}
     * @memberof WriteResponse
     */
    'Results'?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof WriteResponse
     */
    'DiagnosticInfos'?: Array<DiagnosticInfo>;
}
/**
 * 
 * @export
 * @interface WriteResponseMessage
 */
export interface WriteResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof WriteResponseMessage
     */
    'NamespaceUris'?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WriteResponseMessage
     */
    'ServerUris'?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof WriteResponseMessage
     */
    'ServiceId'?: number;
    /**
     * 
     * @type {WriteResponse}
     * @memberof WriteResponseMessage
     */
    'Body'?: WriteResponse;
}
/**
 * 
 * @export
 * @interface WriteValue
 */
export interface WriteValue {
    /**
     * 
     * @type {string}
     * @memberof WriteValue
     */
    'NodeId'?: string;
    /**
     * 
     * @type {number}
     * @memberof WriteValue
     */
    'AttributeId'?: number;
    /**
     * 
     * @type {string}
     * @memberof WriteValue
     */
    'IndexRange'?: string;
    /**
     * 
     * @type {DataValue}
     * @memberof WriteValue
     */
    'Value'?: DataValue;
}

/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @param {BrowseRequestMessage} [browseRequestMessage] BrowseRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        browse: async (browseRequestMessage?: BrowseRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/browse`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(browseRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {BrowseNextRequestMessage} [browseNextRequestMessage] BrowseNextRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        browseNext: async (browseNextRequestMessage?: BrowseNextRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/browsenext`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(browseNextRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {CallRequestMessage} [callRequestMessage] CallRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        call: async (callRequestMessage?: CallRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/call`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(callRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {HistoryReadRequestMessage} [historyReadRequestMessage] HistoryReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        historyRead: async (historyReadRequestMessage?: HistoryReadRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/historyread`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(historyReadRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {HistoryUpdateRequestMessage} [historyUpdateRequestMessage] HistoryUpdateRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        historyUpdate: async (historyUpdateRequestMessage?: HistoryUpdateRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/historyupdate`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(historyUpdateRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {ReadRequestMessage} [readRequestMessage] ReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        read: async (readRequestMessage?: ReadRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/read`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(readRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {TranslateBrowsePathsToNodeIdsRequestMessage} [translateBrowsePathsToNodeIdsRequestMessage] TranslateBrowsePathsToNodeIdsRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        translateBrowsePathsToNodeIds: async (translateBrowsePathsToNodeIdsRequestMessage?: TranslateBrowsePathsToNodeIdsRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/translate`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(translateBrowsePathsToNodeIdsRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {WriteRequestMessage} [writeRequestMessage] WriteRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        write: async (writeRequestMessage?: WriteRequestMessage, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/write`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(writeRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @param {BrowseRequestMessage} [browseRequestMessage] BrowseRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async browse(browseRequestMessage?: BrowseRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BrowseResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.browse(browseRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {BrowseNextRequestMessage} [browseNextRequestMessage] BrowseNextRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async browseNext(browseNextRequestMessage?: BrowseNextRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BrowseNextResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.browseNext(browseNextRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {CallRequestMessage} [callRequestMessage] CallRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async call(callRequestMessage?: CallRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CallResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.call(callRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {HistoryReadRequestMessage} [historyReadRequestMessage] HistoryReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async historyRead(historyReadRequestMessage?: HistoryReadRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HistoryReadResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.historyRead(historyReadRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {HistoryUpdateRequestMessage} [historyUpdateRequestMessage] HistoryUpdateRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async historyUpdate(historyUpdateRequestMessage?: HistoryUpdateRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HistoryUpdateResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.historyUpdate(historyUpdateRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {ReadRequestMessage} [readRequestMessage] ReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async read(readRequestMessage?: ReadRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ReadResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.read(readRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {TranslateBrowsePathsToNodeIdsRequestMessage} [translateBrowsePathsToNodeIdsRequestMessage] TranslateBrowsePathsToNodeIdsRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage?: TranslateBrowsePathsToNodeIdsRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TranslateBrowsePathsToNodeIdsResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {WriteRequestMessage} [writeRequestMessage] WriteRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async write(writeRequestMessage?: WriteRequestMessage, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WriteResponseMessage>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.write(writeRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * 
         * @param {BrowseRequestMessage} [browseRequestMessage] BrowseRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        browse(browseRequestMessage?: BrowseRequestMessage, options?: any): AxiosPromise<BrowseResponseMessage> {
            return localVarFp.browse(browseRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {BrowseNextRequestMessage} [browseNextRequestMessage] BrowseNextRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        browseNext(browseNextRequestMessage?: BrowseNextRequestMessage, options?: any): AxiosPromise<BrowseNextResponseMessage> {
            return localVarFp.browseNext(browseNextRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {CallRequestMessage} [callRequestMessage] CallRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        call(callRequestMessage?: CallRequestMessage, options?: any): AxiosPromise<CallResponseMessage> {
            return localVarFp.call(callRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {HistoryReadRequestMessage} [historyReadRequestMessage] HistoryReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        historyRead(historyReadRequestMessage?: HistoryReadRequestMessage, options?: any): AxiosPromise<HistoryReadResponseMessage> {
            return localVarFp.historyRead(historyReadRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {HistoryUpdateRequestMessage} [historyUpdateRequestMessage] HistoryUpdateRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        historyUpdate(historyUpdateRequestMessage?: HistoryUpdateRequestMessage, options?: any): AxiosPromise<HistoryUpdateResponseMessage> {
            return localVarFp.historyUpdate(historyUpdateRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {ReadRequestMessage} [readRequestMessage] ReadRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        read(readRequestMessage?: ReadRequestMessage, options?: any): AxiosPromise<ReadResponseMessage> {
            return localVarFp.read(readRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {TranslateBrowsePathsToNodeIdsRequestMessage} [translateBrowsePathsToNodeIdsRequestMessage] TranslateBrowsePathsToNodeIdsRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage?: TranslateBrowsePathsToNodeIdsRequestMessage, options?: any): AxiosPromise<TranslateBrowsePathsToNodeIdsResponseMessage> {
            return localVarFp.translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {WriteRequestMessage} [writeRequestMessage] WriteRequestMessage
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        write(writeRequestMessage?: WriteRequestMessage, options?: any): AxiosPromise<WriteResponseMessage> {
            return localVarFp.write(writeRequestMessage, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * 
     * @param {BrowseRequestMessage} [browseRequestMessage] BrowseRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public browse(browseRequestMessage?: BrowseRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).browse(browseRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {BrowseNextRequestMessage} [browseNextRequestMessage] BrowseNextRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public browseNext(browseNextRequestMessage?: BrowseNextRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).browseNext(browseNextRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {CallRequestMessage} [callRequestMessage] CallRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public call(callRequestMessage?: CallRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).call(callRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {HistoryReadRequestMessage} [historyReadRequestMessage] HistoryReadRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public historyRead(historyReadRequestMessage?: HistoryReadRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).historyRead(historyReadRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {HistoryUpdateRequestMessage} [historyUpdateRequestMessage] HistoryUpdateRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public historyUpdate(historyUpdateRequestMessage?: HistoryUpdateRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).historyUpdate(historyUpdateRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {ReadRequestMessage} [readRequestMessage] ReadRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public read(readRequestMessage?: ReadRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).read(readRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {TranslateBrowsePathsToNodeIdsRequestMessage} [translateBrowsePathsToNodeIdsRequestMessage] TranslateBrowsePathsToNodeIdsRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage?: TranslateBrowsePathsToNodeIdsRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).translateBrowsePathsToNodeIds(translateBrowsePathsToNodeIdsRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {WriteRequestMessage} [writeRequestMessage] WriteRequestMessage
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public write(writeRequestMessage?: WriteRequestMessage, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).write(writeRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }
}



