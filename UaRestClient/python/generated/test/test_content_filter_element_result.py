# coding: utf-8

"""
    OPC UA REST API

    This API provides simple REST based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.content_filter_element_result import ContentFilterElementResult  # noqa: E501

class TestContentFilterElementResult(unittest.TestCase):
    """ContentFilterElementResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentFilterElementResult:
        """Test ContentFilterElementResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentFilterElementResult`
        """
        model = ContentFilterElementResult()  # noqa: E501
        if include_optional:
            return ContentFilterElementResult(
                status_code = 0,
                operand_status_codes = [
                    0
                    ],
                operand_diagnostic_infos = [
                    openapi_client.models.diagnostic_info.DiagnosticInfo(
                        symbolic_id = 56, 
                        namespace_uri = 56, 
                        locale = 56, 
                        localized_text = 56, 
                        additional_info = '', 
                        inner_status_code = 0, 
                        inner_diagnostic_info = openapi_client.models.diagnostic_info.DiagnosticInfo(
                            symbolic_id = 56, 
                            namespace_uri = 56, 
                            locale = 56, 
                            localized_text = 56, 
                            additional_info = '', 
                            inner_status_code = 0, ), )
                    ]
            )
        else:
            return ContentFilterElementResult(
        )
        """

    def testContentFilterElementResult(self):
        """Test ContentFilterElementResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
