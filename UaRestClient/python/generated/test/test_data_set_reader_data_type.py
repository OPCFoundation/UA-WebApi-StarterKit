# coding: utf-8

"""
    OPC UA REST API

    This API provides simple REST based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.data_set_reader_data_type import DataSetReaderDataType  # noqa: E501

class TestDataSetReaderDataType(unittest.TestCase):
    """DataSetReaderDataType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataSetReaderDataType:
        """Test DataSetReaderDataType
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataSetReaderDataType`
        """
        model = DataSetReaderDataType()  # noqa: E501
        if include_optional:
            return DataSetReaderDataType(
                name = '',
                enabled = True,
                publisher_id = openapi_client.models.variant.Variant(
                    type = 0, 
                    body = null, 
                    dimensions = [
                        0
                        ], ),
                writer_group_id = 0,
                data_set_writer_id = 0,
                data_set_meta_data = openapi_client.models.data_set_meta_data_type.DataSetMetaDataType(
                    name = '', 
                    description = openapi_client.models.localized_text.LocalizedText(
                        locale = '', 
                        text = '', ), 
                    fields = [
                        openapi_client.models.field_meta_data.FieldMetaData(
                            name = '', 
                            field_flags = 0, 
                            built_in_type = 0, 
                            data_type = '', 
                            value_rank = 56, 
                            array_dimensions = [
                                0
                                ], 
                            max_string_length = 0, 
                            data_set_field_id = '', 
                            properties = [
                                openapi_client.models.key_value_pair.KeyValuePair(
                                    key = '', 
                                    value = openapi_client.models.variant.Variant(
                                        type = 0, 
                                        body = null, 
                                        dimensions = [
                                            0
                                            ], ), )
                                ], )
                        ], 
                    data_set_class_id = '', 
                    configuration_version = openapi_client.models.configuration_version_data_type.ConfigurationVersionDataType(
                        major_version = 0, 
                        minor_version = 0, ), ),
                data_set_field_content_mask = 0,
                message_receive_timeout = 1.337,
                key_frame_count = 0,
                header_layout_uri = '',
                security_mode = 56,
                security_group_id = '',
                security_key_services = [
                    openapi_client.models.endpoint_description.EndpointDescription(
                        endpoint_url = '', 
                        server = openapi_client.models.application_description.ApplicationDescription(
                            application_uri = '', 
                            product_uri = '', 
                            application_name = openapi_client.models.localized_text.LocalizedText(
                                locale = '', 
                                text = '', ), 
                            application_type = 56, 
                            gateway_server_uri = '', 
                            discovery_profile_uri = '', 
                            discovery_urls = [
                                ''
                                ], ), 
                        server_certificate = 'YQ==', 
                        security_mode = 56, 
                        security_policy_uri = '', 
                        user_identity_tokens = [
                            openapi_client.models.user_token_policy.UserTokenPolicy(
                                policy_id = '', 
                                token_type = 56, 
                                issued_token_type = '', 
                                issuer_endpoint_url = '', 
                                security_policy_uri = '', )
                            ], 
                        transport_profile_uri = '', 
                        security_level = 0, )
                    ],
                data_set_reader_properties = [
                    openapi_client.models.key_value_pair.KeyValuePair(
                        key = '', 
                        value = openapi_client.models.variant.Variant(
                            type = 0, 
                            body = null, 
                            dimensions = [
                                0
                                ], ), )
                    ],
                transport_settings = openapi_client.models.extension_object.ExtensionObject(
                    type_id = '', 
                    encoding = 0, 
                    body = openapi_client.models.body.Body(), ),
                message_settings = openapi_client.models.extension_object.ExtensionObject(
                    type_id = '', 
                    encoding = 0, 
                    body = openapi_client.models.body.Body(), ),
                subscribed_data_set = openapi_client.models.extension_object.ExtensionObject(
                    type_id = '', 
                    encoding = 0, 
                    body = openapi_client.models.body.Body(), )
            )
        else:
            return DataSetReaderDataType(
        )
        """

    def testDataSetReaderDataType(self):
        """Test DataSetReaderDataType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
