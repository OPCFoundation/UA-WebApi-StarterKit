# coding: utf-8

"""
    OPC UA REST API

    This API provides simple REST based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.standalone_subscribed_data_set_data_type import StandaloneSubscribedDataSetDataType  # noqa: E501

class TestStandaloneSubscribedDataSetDataType(unittest.TestCase):
    """StandaloneSubscribedDataSetDataType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StandaloneSubscribedDataSetDataType:
        """Test StandaloneSubscribedDataSetDataType
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StandaloneSubscribedDataSetDataType`
        """
        model = StandaloneSubscribedDataSetDataType()  # noqa: E501
        if include_optional:
            return StandaloneSubscribedDataSetDataType(
                name = '',
                data_set_folder = [
                    ''
                    ],
                data_set_meta_data = openapi_client.models.data_set_meta_data_type.DataSetMetaDataType(
                    name = '', 
                    description = openapi_client.models.localized_text.LocalizedText(
                        locale = '', 
                        text = '', ), 
                    fields = [
                        openapi_client.models.field_meta_data.FieldMetaData(
                            name = '', 
                            field_flags = 0, 
                            built_in_type = 0, 
                            data_type = '', 
                            value_rank = 56, 
                            array_dimensions = [
                                0
                                ], 
                            max_string_length = 0, 
                            data_set_field_id = '', 
                            properties = [
                                openapi_client.models.key_value_pair.KeyValuePair(
                                    key = '', 
                                    value = openapi_client.models.variant.Variant(
                                        type = 0, 
                                        body = null, 
                                        dimensions = [
                                            0
                                            ], ), )
                                ], )
                        ], 
                    data_set_class_id = '', 
                    configuration_version = openapi_client.models.configuration_version_data_type.ConfigurationVersionDataType(
                        major_version = 0, 
                        minor_version = 0, ), ),
                subscribed_data_set = openapi_client.models.extension_object.ExtensionObject(
                    type_id = '', 
                    encoding = 0, 
                    body = openapi_client.models.body.Body(), )
            )
        else:
            return StandaloneSubscribedDataSetDataType(
        )
        """

    def testStandaloneSubscribedDataSetDataType(self):
        """Test StandaloneSubscribedDataSetDataType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
