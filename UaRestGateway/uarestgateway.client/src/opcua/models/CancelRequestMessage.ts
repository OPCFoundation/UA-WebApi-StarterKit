/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CancelRequest } from './CancelRequest';
import {
    CancelRequestFromJSON,
    CancelRequestFromJSONTyped,
    CancelRequestToJSON,
} from './CancelRequest';

/**
 * 
 * @export
 * @interface CancelRequestMessage
 */
export interface CancelRequestMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof CancelRequestMessage
     */
    NamespaceUris?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CancelRequestMessage
     */
    ServerUris?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CancelRequestMessage
     */
    LocaleIds?: Array<string>;
    /**
     * 
     * @type {CancelRequest}
     * @memberof CancelRequestMessage
     */
    Body?: CancelRequest;
}

/**
 * Check if a given object implements the CancelRequestMessage interface.
 */
export function instanceOfCancelRequestMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CancelRequestMessageFromJSON(json: any): CancelRequestMessage {
    return CancelRequestMessageFromJSONTyped(json, false);
}

export function CancelRequestMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): CancelRequestMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'NamespaceUris': !exists(json, 'NamespaceUris') ? undefined : json['NamespaceUris'],
        'ServerUris': !exists(json, 'ServerUris') ? undefined : json['ServerUris'],
        'LocaleIds': !exists(json, 'LocaleIds') ? undefined : json['LocaleIds'],
        'Body': !exists(json, 'Body') ? undefined : CancelRequestFromJSON(json['Body']),
    };
}

export function CancelRequestMessageToJSON(value?: CancelRequestMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'NamespaceUris': value.NamespaceUris,
        'ServerUris': value.ServerUris,
        'LocaleIds': value.LocaleIds,
        'Body': CancelRequestToJSON(value.Body),
    };
}

