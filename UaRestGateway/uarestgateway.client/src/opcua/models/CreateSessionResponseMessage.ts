/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateSessionResponse } from './CreateSessionResponse';
import {
    CreateSessionResponseFromJSON,
    CreateSessionResponseFromJSONTyped,
    CreateSessionResponseToJSON,
} from './CreateSessionResponse';

/**
 * 
 * @export
 * @interface CreateSessionResponseMessage
 */
export interface CreateSessionResponseMessage {
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateSessionResponseMessage
     */
    NamespaceUris?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateSessionResponseMessage
     */
    ServerUris?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CreateSessionResponseMessage
     */
    ServiceId?: CreateSessionResponseMessageServiceIdEnum;
    /**
     * 
     * @type {CreateSessionResponse}
     * @memberof CreateSessionResponseMessage
     */
    Body?: CreateSessionResponse;
}


/**
 * @export
 */
export const CreateSessionResponseMessageServiceIdEnum = {
    NUMBER_462: 462
} as const;
export type CreateSessionResponseMessageServiceIdEnum = typeof CreateSessionResponseMessageServiceIdEnum[keyof typeof CreateSessionResponseMessageServiceIdEnum];


/**
 * Check if a given object implements the CreateSessionResponseMessage interface.
 */
export function instanceOfCreateSessionResponseMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateSessionResponseMessageFromJSON(json: any): CreateSessionResponseMessage {
    return CreateSessionResponseMessageFromJSONTyped(json, false);
}

export function CreateSessionResponseMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSessionResponseMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'NamespaceUris': !exists(json, 'NamespaceUris') ? undefined : json['NamespaceUris'],
        'ServerUris': !exists(json, 'ServerUris') ? undefined : json['ServerUris'],
        'ServiceId': !exists(json, 'ServiceId') ? undefined : json['ServiceId'],
        'Body': !exists(json, 'Body') ? undefined : CreateSessionResponseFromJSON(json['Body']),
    };
}

export function CreateSessionResponseMessageToJSON(value?: CreateSessionResponseMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'NamespaceUris': value.NamespaceUris,
        'ServerUris': value.ServerUris,
        'ServiceId': value.ServiceId,
        'Body': CreateSessionResponseToJSON(value.Body),
    };
}

