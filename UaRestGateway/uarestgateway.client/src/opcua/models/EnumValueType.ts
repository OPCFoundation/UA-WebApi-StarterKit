/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA REST API
 * This API provides simple REST based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocalizedText } from './LocalizedText';
import {
    LocalizedTextFromJSON,
    LocalizedTextFromJSONTyped,
    LocalizedTextToJSON,
} from './LocalizedText';

/**
 * 
 * @export
 * @interface EnumValueType
 */
export interface EnumValueType {
    /**
     * 
     * @type {number}
     * @memberof EnumValueType
     */
    Value?: number;
    /**
     * 
     * @type {LocalizedText}
     * @memberof EnumValueType
     */
    DisplayName?: LocalizedText;
    /**
     * 
     * @type {LocalizedText}
     * @memberof EnumValueType
     */
    Description?: LocalizedText;
}

/**
 * Check if a given object implements the EnumValueType interface.
 */
export function instanceOfEnumValueType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EnumValueTypeFromJSON(json: any): EnumValueType {
    return EnumValueTypeFromJSONTyped(json, false);
}

export function EnumValueTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumValueType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'Value': !exists(json, 'Value') ? undefined : json['Value'],
        'DisplayName': !exists(json, 'DisplayName') ? undefined : LocalizedTextFromJSON(json['DisplayName']),
        'Description': !exists(json, 'Description') ? undefined : LocalizedTextFromJSON(json['Description']),
    };
}

export function EnumValueTypeToJSON(value?: EnumValueType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Value': value.Value,
        'DisplayName': LocalizedTextToJSON(value.DisplayName),
        'Description': LocalizedTextToJSON(value.Description),
    };
}

